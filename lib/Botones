import 'package:flutter/material.dart';

import 'Principal.dart';

class MisBotonesHome extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    MediaQueryData queryData;
    queryData = MediaQuery.of(context);
    return new Column(
      children: <Widget>[
        new Expanded(
          child: Row(
            children: <Widget>[
              new Expanded(
                child: InkWell(
                  onTap: () => {
                    showModalBottomSheet(
                        elevation: (queryData.size.height) * 0.8,
                        backgroundColor: Color.fromRGBO(0, 0, 0, 0),
                        //shape:
                        context: context,
                        isScrollControlled: true,
                        builder: (context) {
                          return BotonesDirectorio();
                        }),
                  },

                  ///Boton de dire
                  child: Padding(
                    padding: const EdgeInsets.only(
                        top: 8.0, bottom: 4.0, left: 8.0, right: 4.0),
                    child: Container(
                      color: Color(0xFF00bec1),
                      child: Column(
                        children: <Widget>[
                          Expanded(
                            flex: 3,
                            child: Container(
                              width: (queryData.size.width) * 0.35,
                              //color: Colors.purple,
                              child: Image.asset('images/icons/icodire.png'),
                            ),
                          ),
                          Expanded(
                            flex: 1,
                            child: new Container(
                              //color: Colors.orange,
                              child: new Center(
                                child: Container(
                                  width: (queryData.size.width) * 0.40,
                                  height: (queryData.size.height) * 0.05,
                                  decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius:
                                          BorderRadius.circular(40.0)),
                                  child: Center(
                                    child: Text(
                                      'Directorio',
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Color(0xFF262626),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),

                  ),
                ),
              ),

              /// Boton Programas
              new Expanded(
                child: InkWell(
                  onTap: () => {
                    showModalBottomSheet(
                        elevation: (queryData.size.height) * 0.8,
                        backgroundColor: Color.fromRGBO(0, 0, 0, 0),
                        //shape:
                        context: context,
                        isScrollControlled: true,
                        builder: (context) {
                          return BotonesProgramas();
                        }),
                  },
                  child: Padding(
                    padding: const EdgeInsets.only(
                        top: 8.0, bottom: 4.0, left: 4.0, right: 8.0),
                    child: Container(
                      color: Color(0xFF00bec1),
                      child: Column(
                        children: <Widget>[
                          Expanded(
                            flex: 3,
                            child: Container(
                              width: (queryData.size.width) * 0.30,
                              child: Image.asset('images/icons/icoprog.png'),
                            ),
                          ),
                          Expanded(
                            flex: 1,
                            child: new Container(
                              //color: Colors.orange,
                              child: new Center(
                                child: Container(
                                  width: (queryData.size.width) * 0.40,
                                  height: (queryData.size.height) * 0.05,
                                  decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius:
                                          BorderRadius.circular(40.0)),
                                  child: Center(
                                    child: Text(
                                      'Programas',
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Color(0xFF262626),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),

        ///Boton Servicios
        new Expanded(
          child: Row(
            children: <Widget>[
              new Expanded(
                child: InkWell(
                  onTap: () => {
                    showModalBottomSheet(
                        elevation: (queryData.size.height) * 0.8,
                        backgroundColor: Color.fromRGBO(0, 0, 0, 0),
                        //shape:
                        context: context,
                        isScrollControlled: true,
                        builder: (context) {
                          return Botonesservicios();
                        }),
                  },
                  child: Padding(
                    padding: const EdgeInsets.only(
                        top: 4.0, bottom: 8.0, left: 8.0, right: 4.0),
                    child: Container(
                      color: Color(0xFF00bec1),
                      child: Column(
                        children: <Widget>[
                          Expanded(
                            flex: 3,
                            child: Container(
                              width: (queryData.size.width) * 0.35,
                              //color: Colors.purple,
                              child: Image.asset('images/icons/icosev.png'),
                            ),
                          ),
                          Expanded(
                            flex: 1,
                            child: new Container(
                              //color: Colors.orange,
                              child: new Center(
                                child: Container(
                                  width: (queryData.size.width) * 0.40,
                                  height: (queryData.size.height) * 0.05,
                                  decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius:
                                          BorderRadius.circular(18.0)),
                                  child: Center(
                                    child: Text(
                                      'Servicios',
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Color(0xFF262626),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),

              ///Boton Calendario
              new Expanded(
                child: InkWell(
                  onTap: () => {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => Principal(),
                      ),
                    ),
                  },
                  child: Padding(
                    padding: const EdgeInsets.only(
                        top: 4.0, bottom: 8.0, left: 4.0, right: 8.0),
                    child: Container(
                      color: Color(0xFF00bec1),
                      child: Column(
                        children: <Widget>[
                          Expanded(
                            flex: 3,
                            child: Container(
                              width: (queryData.size.width) * 0.30,
                              child: Image.asset('images/icons/icocal.png'),
                            ),
                          ),
                          Expanded(
                            flex: 1,
                            child: new Container(
                              //color: Colors.orange,
                              child: new Center(
                                child: Container(
                                  width: (queryData.size.width) * 0.40,
                                  height: (queryData.size.height) * 0.05,
                                  decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius:
                                          BorderRadius.circular(40.0)),
                                  child: Center(
                                    child: Text(
                                      'Calendario',
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Color(0xFF262626),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}

///Mostrando la informacion ordenada, al seleccionar el boton muestra la lista de funcionalidades
///
///Asesoria Migratoria, Tramites de Visa y Locaizacion de Personas, la opcion que el usuario elija lo direcciona a una nueva
///ventana con la inf correspondiente.
///Se presentan las clases de cada boton con sus respectivas opciones.
///Clase de [Botonesservicios] se codifica el diseño que tendran los botones.
class Botonesservicios extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    MediaQueryData queryData;
    queryData = MediaQuery.of(context);
    return Container(
      decoration: BoxDecoration(
        //color: Color(0xFFffffff),
        borderRadius: BorderRadius.circular(30.0),
      ),
      width: queryData.size.width,
      height: (queryData.size.height) * 0.35,
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },

              ///Texto dentro del boton
              child: Container(
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),

                ///Se presenta a continuacion,las caracteristicas de la opcion de Asesoria
                child: Row(
                  children: <Widget>[
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico17.png"),
                            color: Color(0xFF005F66),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),
                            new Container(
                              child: Text(
                                "Asesoría Migratoria",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),

          ///Opcion de Tramites de Visa
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },
              child: Container(
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),
                child: Row(
                  children: <Widget>[
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico18.png"),
                            color: Color(0xFFD67500),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),
                            new Container(
                              child: Text(
                                "Tramite de VISA",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),

          ///Opcion de Localizacion de Personas
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },
              child: Container(
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),
                child: Row(
                  children: <Widget>[
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico16.png"),
                            color: Color(0xFF00709E),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),
                            new Container(
                              child: Text(
                                "Localización de Personas",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

///Para el boton de Directorio.
class BotonesDirectorio extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    MediaQueryData queryData;
    queryData = MediaQuery.of(context);
    return Container(
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(30.0),
      ),
      width: queryData.size.width,
      height: (queryData.size.height) * 0.35,
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          ///Opcion de Directorio de SEZAMI
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,

                  ///Una vez Pulsando la opcion nos direcciona a la ventana de SEZAMI
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },
              child: Container(
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),
                child: Row(
                  children: <Widget>[
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico21.png"),
                            color: Color(0xFF008849),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),
                            new Container(
                              child: Text(
                                "SEZAMI",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),

          /// Opcion de directorios de Federaciones
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,

                  ///Una vez Pulsando la opcion nos direcciona a la ventana de Federaciones
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },
              child: Container(
                ///Diseño de caja.
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),
                child: Row(
                  children: <Widget>[
                    new Container(
                      ///Decoracion incluyendo imagen.
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico22.png"),
                            color: Color(0xFF005B9F),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            ///Division entre imagen y texto de opcion dentro de caja.
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),

                            ///Texto y caracteristicas
                            new Container(
                              child: Text(
                                "Federaciones",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),

          ///Opcion de directorios de Representaciones.
          Padding(
            padding: const EdgeInsets.all(4.0),
            child: new InkWell(
              onTap: () => {
                Navigator.pop(context),
                Navigator.push(
                  context,

                  ///Al seleccionar la opcion se direccionas al a ventana de Reprsentaciones.
                  MaterialPageRoute(
                    builder: (context) => Principal(),
                  ),
                ),
              },
              child: Container(
                width: (queryData.size.width) * 0.90,
                height: (queryData.size.height) * 0.08,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(5.0),
                  color: Colors.white,
                ),
                child: Row(
                  children: <Widget>[
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.20,
                      child: Center(
                        child: Container(
                          width: (queryData.size.width) * 0.20,
                          height: (queryData.size.height) * 0.06,
                          child: Image(
                            image: AssetImage("images/icons/ico20.png"),
                            color: Color(0xFF009C49),
                          ),
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.60,
                      height: (queryData.size.height) * 0.08,
                      child: Container(
                        child: Row(
                          children: <Widget>[
                            new Container(
                              height: (queryData.size.height) * 0.06,
                              child: VerticalDivider(
                                color: Colors.blueGrey,
                              ),
                            ),
                            new Container(
                              child: Text(
                                "Representaciones",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    color: Colors.blueGrey, fontSize: 16.0),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    new Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5.0),
                      ),
                      width: (queryData.size.width) * 0.1,
                      height: (queryData.size.height) * 0.08,
                      child: Icon(
                        Icons.chevron_right,
                        size: 40.0,
                        color: Colors.blueGrey,
                      ),
                    )
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

///Clase del boton de Programas
class BotonesProgramas extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    MediaQueryData queryData;
    queryData = MediaQuery.of(context);
    return Container(
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(30.0),
      ),
      width: queryData.size.width, // height: (queryData.size.height) * 0.6,
      child: Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: <Widget>[
          ///Acontinuacion se presenta todas las opciones existentes dentro del boton de Programas
          ///
          ///y al seleccionar cada una de las opcionesse direcciona a las ventanas correspondientes.
          ///Opcion Ferias binacionales de Servicios.
          botonesOpciones(
            context,
            Color(0xFFFE8510),
            'icoFBS_.png',
            'Ferias binacionales de Servicios',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion Corazon de Plata.
          botonesOpciones(
            context,
            Color(0xFF006CAB),
            'ico10.png',
            'Corazón de Plata',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion Mariposa.
          botonesOpciones(
            context,
            Color(0xFFC85C06),
            'ico15.png',
            'Mariposa',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion Apoyo a Deportados.
          botonesOpciones(
            context,
            Color(0xFFBD8F00),
            'ico13.png',
            'Apoyo a Deportados',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion 2x1.
          botonesOpciones(
            context,
            Color(0xFF8B9020),
            'ico11.png',
            '2x1',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion Exbraceros.
          botonesOpciones(
            context,
            Color(0xFF005DFB),
            'ico12.png',
            'Exbraceros',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion deTraslados.
          botonesOpciones(
            context,
            Color(0xFF454545),
            'ico14.png',
            'Traslados',
            MaterialPageRoute(builder: (context) => Principal()),
          ),

          ///Opcion  de Apostilla de Documentos Americanos.
          botonesOpciones(
            context,
            Color(0xFFD2A700),
            'icoestrella.png',
            'Apostilla de Documentos Americanos',
            MaterialPageRoute(builder: (context) => Principal()),
          ),
        ],
      ),
    );
  }

  ///Caracteristicas de la lista de opciones  del boton de Programas.
  Widget botonesOpciones(BuildContext context, Color col, String img,
      String label, MaterialPageRoute materialPageRoute) {
    final size = MediaQuery.of(context).size;
    return InkWell(
      onTap: () => {
        Navigator.pop(context),
        Navigator.push(context, materialPageRoute),
      },
      child: Container(
        width: size.width * 0.90,
        height: 55,
        margin: const EdgeInsets.symmetric(vertical: 3.0),
        padding: const EdgeInsets.all(4.0),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(5.0),
          color: Colors.white,
        ),
        child: Row(
          children: <Widget>[
            Container(
              height: 50,
              padding: EdgeInsets.all(4.0),
              child: Image(
                image: AssetImage("images/icons/$img"),
                color: col,
              ),
            ),
            VerticalDivider(color: Colors.grey[300]),
            Expanded(
              child: Text(
                label,
                textAlign: TextAlign.left,
                style: TextStyle(color: Colors.blueGrey, fontSize: 16.0),
              ),
            ),
            Container(
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(5.0),
              ),
              child: Icon(
                Icons.chevron_right,
                size: 30.0,
                color: Colors.blueGrey,
              ),
            )
          ],
        ),
      ),
    );
  }
}


Widget botonContinuar(){
 final preferences = Preferences();
 return RaisedButton(onPressed:() {
  preferences.guardarNombre(NameController.text)
  }, 
 child: Text('Continuar'),);
}

 children: [
              Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  //crossAxisAlignment: CrossAxisAlignment.start,
                  children: [_boton1("Desayuno"), _boton2("Comida")],
                ),


                  child: ElevatedButton(
                  
                  child: const Text('Iniciar Sesión'),
                  onPressed: () {
                    print(nameController.text);
                    print(passwordController.text);
                    if (_formKey.currentState!.validate()) {
                      Navigator.push(context,
                          MaterialPageRoute(builder: (context) => Principal()));
                      // Si el formulario es válido, queremos mostrar un Snackbar
                    } else {
                      Scaffold.of(context).showSnackBar(SnackBar(
                        content: Text(
                            'Por favor, Ingresa los datos. Hay campos vacios'),
                        backgroundColor: Colors.green,
                        //width: 600,
                        shape: StadiumBorder(),
                        elevation: 560,
                        //   comportamiento: SnackBarBehavior.floating;
                      ));
                    
                    
                    
                    }
                  },
                )

accountEmail: Text("informes@gmail.com"),

 children: <Widget>[
      new UserAccountsDrawerHeader(
        accountName: FutureBuilder(
       future: preferences.obtenerNombre();
       builder: (builder, AsyncSnapshot snapshot){
          if(snapshot.hasData){
           final nombre = snapshot.data;
           return Text(nombre);
           } else{
            return Text('Cargando...')
          }
        }),
Que error te bota? Puedes intentar poniendo en el builder esto:
 (builder, AsyncSnapshot<String?> snapshot) 
 y en el return Text(nombre) ponle esto: return Text(nombre ?? '')
        
       decoration: BoxDecoration(
         color: Colors.blue,
   
      ),
      Ink(
        color: Colors.green[300],
        child: new ListTile(
          leading: const Icon(Icons.person, color:Colors.blue),
          title: Text(
            "Perfil",
            style: TextStyle(color: Colors.black),
          ),
        ),
      ),
      Divider(color: Colors.green),
      new ListTile(
        dense:true,
        focusColor:  Colors.yellow,
        title: const Text("Inicio",
        //style: styleDrawer,
        ),
        leading:  Icon(Icons.home, color:Colors.blue),
        
        onTap: () {
          print("Hola");
        },
        onLongPress: () {
          print('longPress');
        },
      ),
    ....  
  
    ],               

    
  preferences.guardarNombre(nameController.text);
   SharedPreferences preferences = await SharedPreferences.getInstance();
    String? nombre = preferences.getString('nombre');
    return nombre;


    Widget botonContinuar() {
final preferences = Preferences();
 return ElevatedButton(onPressed:() {
  preferences.guardarNombre(nameController.text);

   print(nameController.text);
                    print(passwordController.text);
                    if (_formKey.currentState!.validate()) {
                      Navigator.push(context,
                          MaterialPageRoute(builder: (context) => Principal()));
                      // Si el formulario es válido, queremos mostrar un Snackbar
                    } else {
                      Scaffold.of(context).showSnackBar(SnackBar(
                        content: Text(
                            'Por favor, Ingresa los datos. Hay campos vacios'),
                        backgroundColor: Colors.green,
                        //width: 600,
                        shape: StadiumBorder(),
                        elevation: 560,
                        //   comportamiento: SnackBarBehavior.floating;
                      ));
                    }
  }, 
 child: Text('Continuar'),
  
 
 );
  }


  class Preferences{
   Future<void> guardarNombre(String nombre) async {
    SharedPreferences preferences = await SharedPreferences.getInstance();
    await preferences.setString('nombre', nombre);

Future<void?> obtenerNombre() async {
    SharedPreferences preferences = await SharedPreferences.getInstance();
    String? nombre = preferences.getString('nombre');
    return nombre;
  }
  }
  }

     body:  FutureBuilder(
    future: userRef.document(widget.userId).get(),
    builder: (BuildContext context, AsyncSnapshot snapshot){
      if(!snapshot.hasData){
        return Center(
          child: new CircularProgressIndicator(valueColor: new AlwaysStoppedAnimation<Color>(Colors.white),strokeWidth: 3.0,),);
      }

      Container(
   child: FutureBuilder<Agua>(
      future: _llenarBalde(),
      builder: (context, snapshot) {
         if (snapshot.hasData) {
            return Text(snapshot.data["litros"]);
         } else if (snapshot.hasError) {
            return Text("${snapshot.error}");
         }

         // By default, show a loading spinner.
         return CircularProgressIndicator();
      },
    ),
),


 accountName:   FutureBuilder(
       future: preferences.obtenerNombre(),
        builder: (Builder, AsyncSnapshot<String> snapshot) {
 if(snapshot.hasData){
           final nombre = snapshot.data;
           return Text(nombre ?? '');
           } else{
            return Text('Cargando...');
          }

          },
      
         
       
        
        ),

        Widget botonContinuar(){
 final preferences = Preferences();
 return RaisedButton(onPressed:() {
  preferences.guardarNombre(NameController.text)
  }, 
 child: Text('Continuar'),);
}



          new UserAccountsDrawerHeader(
            accountName: FutureBuilder(
              future: preferences.obtenerNombre(),
              builder: (Builder, AsyncSnapshot<String> snapshot) {
                if (snapshot.hasData) {
                  final nombre = snapshot.data;
                  return Text(nombre ?? '');
                } else {
                  return Text('Cargando...');
                }
              },
            ),


              child: Container(
                      color: Color(0xFF00bec1),
                      child: Column(
                        children: <Widget>[
                          Expanded(
                            flex: 3,
                            child: Container(
                              width: (queryData.size.width) * 0.35,
                              color: Colors.purple,
                              //child: Image.asset('images/icons/icodire.png'),
                            ),
                          ),
                          Expanded(
                            flex: 1,
                            child: new Container(
                              //color: Colors.orange,
                              child: new Center(
                                child: Container(
                                  width: (queryData.size.width) * 0.40,
                                  height: (queryData.size.height) * 0.05,
                                  decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius:
                                          BorderRadius.circular(40.0)),
                                  child: Center(
                                    child: Text(
                                      'Directorio',
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Color(0xFF262626),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),


                     body: Container(
        
        //width: double.infinity,
       // color: Colors.white,
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
              Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  //crossAxisAlignment: CrossAxisAlignment.start,
                  children: [_boton1("Desayuno"), _boton2("Comida")],
                ),
                
                 Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  // crossAxisAlignment: CrossAxisAlignment.center,

                  children: [
                    _boton3("Cena       "),
                    _boton4("Bebidas"),
                  ],
                ),
              
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  // crossAxisAlignment: CrossAxisAlignment.end,
                  children: [
                    _boton5("Postres"),
                    _boton6("Otros   "),
                  ],
                )
               
           // const Text('Hola mundo'),
            //_boton1("PáginaPrincipal"),
          ],
        ),
      ),
)

    );
  }


      class MyApp extends HookWidget {
  // final privider = useProvider(subListNotifier);
  @override
  Widget build(BuildContext context) {
    final state = useProvider(subListNotifier.state);
    return MaterialApp(
        title: 'Flutter Demo',
        theme: ThemeData(
          primarySwatch: Colors.blue,
          visualDensity: VisualDensity.adaptivePlatformDensity,
        ),
        home: Scaffold(
          appBar: AppBar(
            title: Text('Manage subscription'),
          ),
          body: ListView.separated(
            padding: EdgeInsets.all(5),
            itemBuilder: (BuildContext context, int index) {
              var sub = state[index];
              return SubListItem(
                title: sub.name,
                subTitle: '¥${sub.cost}',
                tileColor: sub.color,
                leading: ConstrainedBox(
                    constraints: BoxConstraints(
                        minHeight: 44,
                        minWidth: 34,
                        maxHeight: 64,
                        maxWidth: 54),
                    child: FlutterLogo()),
              );
            },
            separatorBuilder: (BuildContext context, int index) {
              return SizedBox(height: 10);
            },
            itemCount: state.length,
          ),
        )
        );
  }
}

class SubListItem extends StatelessWidget {
  final String title;
  final String subTitle;
  final Widget leading;
  final Color tileColor;

  SubListItem({this.title, this.subTitle, this.leading, this.tileColor});

  @override
  Widget build(BuildContext context) {
    return ListTile(
        title: Text(title),
        subtitle: Text(subTitle),
        leading: leading,
        onTap: () => {},
        onLongPress: () => {},
        trailing: Icon(Icons.more_vert),
    );
  }
}

final preferences = Preferencias(); 

Widget botonContinuar() {
final preferences = Preferencias();
 return ElevatedButton(onPressed:() {
  preferences.guardarNombre(nameController.text);

   print(nameController.text);
                    print(passwordController.text);
                    if (_formKey.currentState!.validate()) {
                      Navigator.push(context,
                          MaterialPageRoute(builder: (context) => Principal()));
                      // Si el formulario es válido, queremos mostrar un Snackbar
                    } else {
                      Scaffold.of(context).showSnackBar(SnackBar(
                        content: Text(
                            'Por favor, Ingresa los datos. Hay campos vacios'),
                        backgroundColor: Colors.green,
                        //width: 600,
                        shape: StadiumBorder(),
                        elevation: 560,
                        //   comportamiento: SnackBarBehavior.floating;
                      ));
                    }
  }, 
 child: Text('Continuar'),
  
 
 );
  }
  class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(color: Colors.white),
      child: Center(
        child: Text(
          'Hello World',
          textDirection: TextDirection.ltr,
          style: TextStyle(
            fontSize: 32,
            color: Colors.black87,
          ),
        ),
      ),
    );
  }
}

Row(
    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
    children: [
      Image.asset('images/pic1.jpg'),
      Image.asset('images/pic2.jpg'),
      Image.asset('images/pic3.jpg'),
    ],
  );


  
      body: Container(
       // alignment: Alignment.bottomRight,
        
        //width: double.infinity,
       // color: Colors.white,
        child:  Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
              Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  //crossAxisAlignment: CrossAxisAlignment.start,
                  children: [_boton1("Desayuno"), _boton2("Comida  ")],
                ),
                
                 Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  // crossAxisAlignment: CrossAxisAlignment.center,

                  children: [
                    _boton3("Cena        "),
                    _boton4("Bebidas "),
                  ],
                ),
              
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  // crossAxisAlignment: CrossAxisAlignment.end,
                  children: [
                    _boton5("Postres   "),
                    _boton6("Otros      "),
                  ],
                )
               
           // const Text('Hola mundo'),
            //_boton1("PáginaPrincipal"),
          ],



            Widget _boton3(String texto) {
    return MaterialButton(
      child: Text(
        texto,
        style: const TextStyle(color: Colors.black),
      ),
      color: Colors.pink[100],
      elevation: 1,
      padding: const EdgeInsets.all(60),
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10.0),
      //  side: const BorderSide(color: Colors.black),
      ),
      onPressed: () {
        Navigator.push(
          context, 
          MaterialPageRoute(builder: (context) => BotonBarraNavegacion1()),
        );
      },
    );
  }




 @override
  Widget build(BuildContext context) {
    return MaterialApp(
        debugShowCheckedModeBanner: false,
        title: 'Flutter Demo',
        theme: ThemeData(
          primarySwatch: Colors.blue,
        ),
home: Scaffold(
          appBar: AppBar(
            title: Text("Selecciona el tema de recetas"),
          ),
          drawer: MenuLateral(),

      body: Container(
       // alignment: Alignment.bottomRight,
        
  

    child:  Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
              Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  //crossAxisAlignment: CrossAxisAlignment.start,
                  children: [_boton1("Desayuno"), _boton2("Comida  ")],
                ),
                
                 Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  // crossAxisAlignment: CrossAxisAlignment.center,

                  children: [
                    _boton3("Cena        "),
                    _boton4("Bebidas "),
                  ],
                ),